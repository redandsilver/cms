plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.example.cms.order'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

dependencies {
    implementation project(path: ":cms-domain",configuration: "default")

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation project(path: ':user-api')
    implementation project(path: ':user-api')
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // embedded redis
    implementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }
    // to make random code
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'mysql:mysql-connector-java'

    // HTTP Client 도구로써, 외부 API 호출을 쉽게
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 데이터 변경 이력을 관리하는 기능을 제공
    implementation 'org.springframework.data:spring-data-envers'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
    useJUnitPlatform()
}